<?php

namespace Proxies\__CG__\BackOffice\RO\AgenceBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Agence extends \BackOffice\RO\AgenceBundle\Entity\Agence implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'BackOffice\\RO\\AgenceBundle\\Entity\\Agence' . "\0" . 'id', '' . "\0" . 'BackOffice\\RO\\AgenceBundle\\Entity\\Agence' . "\0" . 'nomAgence', '' . "\0" . 'BackOffice\\RO\\AgenceBundle\\Entity\\Agence' . "\0" . 'adresseAgenceL1', '' . "\0" . 'BackOffice\\RO\\AgenceBundle\\Entity\\Agence' . "\0" . 'adresseAgenceL2', '' . "\0" . 'BackOffice\\RO\\AgenceBundle\\Entity\\Agence' . "\0" . 'cpAgence', '' . "\0" . 'BackOffice\\RO\\AgenceBundle\\Entity\\Agence' . "\0" . 'villeAgence', '' . "\0" . 'BackOffice\\RO\\AgenceBundle\\Entity\\Agence' . "\0" . 'paysAgence', 'utilisateurs', 'vehicules', '' . "\0" . 'BackOffice\\RO\\AgenceBundle\\Entity\\Agence' . "\0" . 'logoAgence', '' . "\0" . 'BackOffice\\RO\\AgenceBundle\\Entity\\Agence' . "\0" . 'createdAt', '' . "\0" . 'BackOffice\\RO\\AgenceBundle\\Entity\\Agence' . "\0" . 'updatedAt', '' . "\0" . 'BackOffice\\RO\\AgenceBundle\\Entity\\Agence' . "\0" . 'expireAt');
        }

        return array('__isInitialized__', '' . "\0" . 'BackOffice\\RO\\AgenceBundle\\Entity\\Agence' . "\0" . 'id', '' . "\0" . 'BackOffice\\RO\\AgenceBundle\\Entity\\Agence' . "\0" . 'nomAgence', '' . "\0" . 'BackOffice\\RO\\AgenceBundle\\Entity\\Agence' . "\0" . 'adresseAgenceL1', '' . "\0" . 'BackOffice\\RO\\AgenceBundle\\Entity\\Agence' . "\0" . 'adresseAgenceL2', '' . "\0" . 'BackOffice\\RO\\AgenceBundle\\Entity\\Agence' . "\0" . 'cpAgence', '' . "\0" . 'BackOffice\\RO\\AgenceBundle\\Entity\\Agence' . "\0" . 'villeAgence', '' . "\0" . 'BackOffice\\RO\\AgenceBundle\\Entity\\Agence' . "\0" . 'paysAgence', 'utilisateurs', 'vehicules', '' . "\0" . 'BackOffice\\RO\\AgenceBundle\\Entity\\Agence' . "\0" . 'logoAgence', '' . "\0" . 'BackOffice\\RO\\AgenceBundle\\Entity\\Agence' . "\0" . 'createdAt', '' . "\0" . 'BackOffice\\RO\\AgenceBundle\\Entity\\Agence' . "\0" . 'updatedAt', '' . "\0" . 'BackOffice\\RO\\AgenceBundle\\Entity\\Agence' . "\0" . 'expireAt');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Agence $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getNomAgence()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNomAgence', array());

        return parent::getNomAgence();
    }

    /**
     * {@inheritDoc}
     */
    public function getAdresseAgenceL1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdresseAgenceL1', array());

        return parent::getAdresseAgenceL1();
    }

    /**
     * {@inheritDoc}
     */
    public function getAdresseAgenceL2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdresseAgenceL2', array());

        return parent::getAdresseAgenceL2();
    }

    /**
     * {@inheritDoc}
     */
    public function getCpAgence()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCpAgence', array());

        return parent::getCpAgence();
    }

    /**
     * {@inheritDoc}
     */
    public function getVilleAgence()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVilleAgence', array());

        return parent::getVilleAgence();
    }

    /**
     * {@inheritDoc}
     */
    public function getPaysAgence()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaysAgence', array());

        return parent::getPaysAgence();
    }

    /**
     * {@inheritDoc}
     */
    public function getLogoAgence()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLogoAgence', array());

        return parent::getLogoAgence();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', array());

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', array());

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function getExpireAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpireAt', array());

        return parent::getExpireAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function setNomAgence($nomAgence)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNomAgence', array($nomAgence));

        return parent::setNomAgence($nomAgence);
    }

    /**
     * {@inheritDoc}
     */
    public function setAdresseAgenceL1($adresseAgenceL1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdresseAgenceL1', array($adresseAgenceL1));

        return parent::setAdresseAgenceL1($adresseAgenceL1);
    }

    /**
     * {@inheritDoc}
     */
    public function setAdresseAgenceL2($adresseAgenceL2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdresseAgenceL2', array($adresseAgenceL2));

        return parent::setAdresseAgenceL2($adresseAgenceL2);
    }

    /**
     * {@inheritDoc}
     */
    public function setCpAgence($cpAgence)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCpAgence', array($cpAgence));

        return parent::setCpAgence($cpAgence);
    }

    /**
     * {@inheritDoc}
     */
    public function setVilleAgence($villeAgence)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVilleAgence', array($villeAgence));

        return parent::setVilleAgence($villeAgence);
    }

    /**
     * {@inheritDoc}
     */
    public function setPaysAgence($paysAgence)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaysAgence', array($paysAgence));

        return parent::setPaysAgence($paysAgence);
    }

    /**
     * {@inheritDoc}
     */
    public function setLogoAgence($logoAgence)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLogoAgence', array($logoAgence));

        return parent::setLogoAgence($logoAgence);
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', array($createdAt));

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt($updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', array($updatedAt));

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function setExpireAt($expireAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpireAt', array($expireAt));

        return parent::setExpireAt($expireAt);
    }

}
